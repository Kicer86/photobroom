name: CMake

on: [pull_request, push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgPackages: 'dlib[core,fftw3] exiv2 magic-enum qtquickcontrols2 qtsvg qttools'
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgPackages: 'dlib[core,fftw3] exiv2 magic-enum qtquickcontrols2 qtsvg qttools'

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true

    - uses: lukka/get-cmake@latest
    - name: dir
      run: find $RUNNER_WORKSPACE
      shell: bash

    - name: Restore artifacts, or run vcpkg, build and cache artifacts
      uses: lukka/run-vcpkg@main
      id: runvcpkg
      with:
        vcpkgArguments: '${{ matrix.vcpkgPackages }}'
        vcpkgTriplet: '${{ matrix.triplet }}'
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'

    - name: dir
      run: find $RUNNER_WORKSPACE
      shell: bash

    - name: Prints outputs of run-vcpkg task
      run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "

    - name: Run CMake+Ninja with triplet (cmd)
      uses: lukka/run-cmake@main
      id: runcmake_cmd
      with:
        cmakeGenerator: 'Ninja'
        cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
        cmakeListsTxtPath: '${{ github.workspace }}/cmakeliststxt/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildWithCMakeArgs: '-- -v'
        vcpkgTriplet: ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}
        buildDirectory: '${{ runner.workspace }}/b/ninja/'
