
name: Build-Windows

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false


env:
  VCPKG_OVERLAY_PORTS: ${{ github.workspace }}/.github/vcpkg_overlays/qt

jobs:
  build-dependencies:
    name: "Build PhotoBroom dependencies for Windows"
    runs-on: windows-latest
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true

    - name: Set up binary cache
      uses: actions/cache@v4
      with:
        path: ${{ env.VCPKG_ROOT }}\installed
        key: ${{ runner.os }}-vcpkg-binary-cache-${{ hashFiles('vcpkg*.json') }}
        restore-keys: ${{ runner.os }}-vcpkg-binary-cache-

    # built dependencies will be cached and reused in later jobs
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v11.5
      with:
        vcpkgJsonGlob: vcpkg.json
        runVcpkgInstall: true
      env:
        VCPKG_BINARY_SOURCES: default,readwrite

    - name: Upload vcpkg cache for this run
      uses: actions/upload-artifact@v4
      with:
        name: vcpkg-binary-cache
        path: ${{ env.VCPKG_ROOT }}\installed
        retention-days: 1

  build-photo-broom:
    name: "Build PhotoBroom sources on Windows"
    needs: build-dependencies
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "debug"
            cmake_config: "ninja_debug_vcpkg"
            cmake_build: "Ninja Debug"
          - name: "release"
            cmake_config: "ninja_release_vcpkg"
            cmake_build: "Ninja Release"

    steps:
    - name: Print setup
      run: |
        echo "config: ${{ matrix.config.cmake_config }}"
        echo "build: ${{ matrix.config.cmake_build }}"

    - uses: actions/checkout@v5
      with:
        submodules: true

    - name: Download vcpkg cache from previous job
      uses: actions/download-artifact@v4
      with:
        name: vcpkg-binary-cache
        path: ${{ env.VCPKG_ROOT }}\installed

    - name: Set up binary cache
      uses: actions/cache@v4
      with:
        path: ${{ env.VCPKG_ROOT }}\installed
        key: ${{ runner.os }}-vcpkg-binary-cache-${{ hashFiles('vcpkg*.json') }}
        restore-keys: ${{ runner.os }}-vcpkg-binary-cache-

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v11.5
      with:
        vcpkgJsonGlob: vcpkg.json
      env:
        VCPKG_BINARY_SOURCES: default,readwrite
