
# https://stackoverflow.com/questions/62884439/how-to-use-cmake-file-get-runtime-dependencies-in-an-install-statement
# another interesting solution is https://cmake.org/cmake/help/latest/command/install.html?highlight=install#targets with RUNTIME_DEPENDENCIES
# however for some reason it doesn't find exiv2 and some other dependencies.
# Also see: https://gitlab.kitware.com/cmake/cmake/-/issues/22006
# Some details about fake dependencies: https://stackoverflow.com/questions/36240215/dependency-walker-missing-dlls

install(CODE [[
    file(GET_RUNTIME_DEPENDENCIES
        PRE_EXCLUDE_REGEXES
            api-ms-.*
            ext-ms-.*
            hvsifiletrust.dll
            [qQ]t6.*\\.dll                                  # windeployqt will take care about Qt's libs
        POST_EXCLUDE_REGEXES
            ".*/system32/.*\\.dll"
        RESOLVED_DEPENDENCIES_VAR deps
        EXECUTABLES $<TARGET_FILE:photo_broom>
    )
    
    file(INSTALL
        DESTINATION "${CMAKE_INSTALL_PREFIX}/@PATH_BIN@"
        TYPE SHARED_LIBRARY
        FOLLOW_SYMLINK_CHAIN
        FILES ${deps}
    )

    execute_process(
        COMMAND "@WINDEPLOY@"
            --dir "${CMAKE_INSTALL_PREFIX}/@PATH_BIN@"
            --plugindir "${CMAKE_INSTALL_PREFIX}/@PATH_BIN@/qt_plugins"
            $<$<CONFIG:Debug>:--debug>$<$<CONFIG:Release>:--release>
            --qmldir "@PROJECT_SOURCE_DIR@/src/gui/desktop"
            $<$<BOOL:@BUILD_SHARED_LIBS@>:$<TARGET_FILE:gui>>                  # include 'gui' target only if it is a shared library
            $<TARGET_FILE:photo_broom>
            $<$<BOOL:@BUILD_SHARED_LIBS@>:$<TARGET_FILE:updater>>              # ditto
            $<TARGET_FILE:sql_backend_base>
            --compiler-runtime
        WORKING_DIRECTORY "@WINDEPLOY_DIR@"
    )

]])
