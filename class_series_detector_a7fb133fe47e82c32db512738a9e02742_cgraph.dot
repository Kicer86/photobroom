digraph "SeriesDetector::listCandidates"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="SeriesDetector::listCandidates",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="SeriesDetector::analyzePhotos",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$class_series_detector.html#a6e234a1e8721233612cf4db84bf9dad5",tooltip=" "];
  Node2 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ILogger::debug",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_i_logger.html#a72f523de0593fdab9bdd79302a51880e",tooltip=" "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Database::getValidPhotos\lFilter",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$namespace_database.html#a4ec02b4e9c6e42324e216f62f863a5c7",tooltip="return filter which will filter out broken photos (missing, broken, deleted etc)"];
}
